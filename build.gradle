plugins {
    id("org.jetbrains.kotlin.jvm").version("2.0.20")
    id('org.jetbrains.dokka').version('1.9.20')
    id("maven-publish")
    //id('org.jreleaser').version('1.14.0')
}

group = "com.githu.exprml"
version = "0.0.2"

repositories {
    mavenCentral()
}

dependencies {
    api("com.google.protobuf:protobuf-java:4.28.2")
    api("com.google.protobuf:protobuf-kotlin:4.28.2")
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.0")
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation("com.fasterxml.jackson.core:jackson-core:2.18.0")

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.1")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.0")
}

tasks.test {
    useJUnitPlatform()
}
java {
    withJavadocJar()
    withSourcesJar()
}
tasks.named("javadocJar", Jar.class) {
    dependsOn("dokkaJavadoc")
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(tasks["dokkaJavadoc"].outputs)
}
kotlin {
    jvmToolchain(21)
}
publishing {
    repositories {
        mavenLocal()
    }
    publications {
        create("release", MavenPublication.class) {
            from(components["java"])
        }
    }
}
//tasks.named("publishToMavenLocal") {
//    dependsOn("publish")
//}