// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: exprml/v1/expr.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package net.jumpaku.exprml.pb.exprml.v1;

@kotlin.jvm.JvmName("-initializeref")
public inline fun ref(block: net.jumpaku.exprml.pb.exprml.v1.RefKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.Ref =
  net.jumpaku.exprml.pb.exprml.v1.RefKt.Dsl._create(net.jumpaku.exprml.pb.exprml.v1.Ref.newBuilder()).apply { block() }._build()
/**
 * ```
 * Ref is a Ref expression.
 * ```
 *
 * Protobuf type `exprml.v1.Ref`
 */
public object RefKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: net.jumpaku.exprml.pb.exprml.v1.Ref.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: net.jumpaku.exprml.pb.exprml.v1.Ref.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): net.jumpaku.exprml.pb.exprml.v1.Ref = _builder.build()

    /**
     * ```
     * Ident is the identifier of the reference.
     * ```
     *
     * `string ident = 1 [json_name = "ident"];`
     */
    public var ident: kotlin.String
      @JvmName("getIdent")
      get() = _builder.ident
      @JvmName("setIdent")
      set(value) {
        _builder.ident = value
      }
    /**
     * ```
     * Ident is the identifier of the reference.
     * ```
     *
     * `string ident = 1 [json_name = "ident"];`
     */
    public fun clearIdent() {
      _builder.clearIdent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun net.jumpaku.exprml.pb.exprml.v1.Ref.copy(block: `net.jumpaku.exprml.pb.exprml.v1`.RefKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.Ref =
  `net.jumpaku.exprml.pb.exprml.v1`.RefKt.Dsl._create(this.toBuilder()).apply { block() }._build()

