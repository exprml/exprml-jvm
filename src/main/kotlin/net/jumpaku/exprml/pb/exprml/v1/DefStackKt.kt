// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: exprml/v1/evaluator.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package net.jumpaku.exprml.pb.exprml.v1;

@kotlin.jvm.JvmName("-initializedefStack")
public inline fun defStack(block: net.jumpaku.exprml.pb.exprml.v1.DefStackKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.DefStack =
  net.jumpaku.exprml.pb.exprml.v1.DefStackKt.Dsl._create(net.jumpaku.exprml.pb.exprml.v1.DefStack.newBuilder()).apply { block() }._build()
/**
 * ```
 * FunDefList is a list of function definitions.
 * ```
 *
 * Protobuf type `exprml.v1.DefStack`
 */
public object DefStackKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: net.jumpaku.exprml.pb.exprml.v1.DefStack.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: net.jumpaku.exprml.pb.exprml.v1.DefStack.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): net.jumpaku.exprml.pb.exprml.v1.DefStack = _builder.build()

    /**
     * ```
     * Parent definition list.
     * ```
     *
     * `.exprml.v1.DefStack parent = 1 [json_name = "parent"];`
     */
    public var parent: net.jumpaku.exprml.pb.exprml.v1.DefStack
      @JvmName("getParent")
      get() = _builder.parent
      @JvmName("setParent")
      set(value) {
        _builder.parent = value
      }
    /**
     * ```
     * Parent definition list.
     * ```
     *
     * `.exprml.v1.DefStack parent = 1 [json_name = "parent"];`
     */
    public fun clearParent() {
      _builder.clearParent()
    }
    /**
     * ```
     * Parent definition list.
     * ```
     *
     * `.exprml.v1.DefStack parent = 1 [json_name = "parent"];`
     * @return Whether the parent field is set.
     */
    public fun hasParent(): kotlin.Boolean {
      return _builder.hasParent()
    }
    public val DefStackKt.Dsl.parentOrNull: net.jumpaku.exprml.pb.exprml.v1.DefStack?
      get() = _builder.parentOrNull

    /**
     * ```
     * Definition.
     * ```
     *
     * `.exprml.v1.Eval.Definition def = 2 [json_name = "def"];`
     */
    public var def: net.jumpaku.exprml.pb.exprml.v1.Eval.Definition
      @JvmName("getDef")
      get() = _builder.def
      @JvmName("setDef")
      set(value) {
        _builder.def = value
      }
    /**
     * ```
     * Definition.
     * ```
     *
     * `.exprml.v1.Eval.Definition def = 2 [json_name = "def"];`
     */
    public fun clearDef() {
      _builder.clearDef()
    }
    /**
     * ```
     * Definition.
     * ```
     *
     * `.exprml.v1.Eval.Definition def = 2 [json_name = "def"];`
     * @return Whether the def field is set.
     */
    public fun hasDef(): kotlin.Boolean {
      return _builder.hasDef()
    }
    public val DefStackKt.Dsl.defOrNull: net.jumpaku.exprml.pb.exprml.v1.Eval.Definition?
      get() = _builder.defOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun net.jumpaku.exprml.pb.exprml.v1.DefStack.copy(block: `net.jumpaku.exprml.pb.exprml.v1`.DefStackKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.DefStack =
  `net.jumpaku.exprml.pb.exprml.v1`.DefStackKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val net.jumpaku.exprml.pb.exprml.v1.DefStackOrBuilder.parentOrNull: net.jumpaku.exprml.pb.exprml.v1.DefStack?
  get() = if (hasParent()) getParent() else null

public val net.jumpaku.exprml.pb.exprml.v1.DefStackOrBuilder.defOrNull: net.jumpaku.exprml.pb.exprml.v1.Eval.Definition?
  get() = if (hasDef()) getDef() else null

