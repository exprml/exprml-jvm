// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: exprml/v1/value.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package net.jumpaku.exprml.pb.exprml.v1;

@kotlin.jvm.JvmName("-initializevalue")
public inline fun value(block: net.jumpaku.exprml.pb.exprml.v1.ValueKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.Value =
  net.jumpaku.exprml.pb.exprml.v1.ValueKt.Dsl._create(net.jumpaku.exprml.pb.exprml.v1.Value.newBuilder()).apply { block() }._build()
/**
 * ```
 * JSON value.
 * ```
 *
 * Protobuf type `exprml.v1.Value`
 */
public object ValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: net.jumpaku.exprml.pb.exprml.v1.Value.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: net.jumpaku.exprml.pb.exprml.v1.Value.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): net.jumpaku.exprml.pb.exprml.v1.Value = _builder.build()

    /**
     * ```
     * Type of the value.
     * ```
     *
     * `.exprml.v1.Value.Type type = 1 [json_name = "type"];`
     */
    public var type: net.jumpaku.exprml.pb.exprml.v1.Value.Type
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.typeValue
      @JvmName("setTypeValue")
      set(value) {
        _builder.typeValue = value
      }
    /**
     * ```
     * Type of the value.
     * ```
     *
     * `.exprml.v1.Value.Type type = 1 [json_name = "type"];`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * bool has a boolean value if the type is TYPE_BOOL.
     * ```
     *
     * `bool bool = 2 [json_name = "bool"];`
     */
    public var bool: kotlin.Boolean
      @JvmName("getBool")
      get() = _builder.bool
      @JvmName("setBool")
      set(value) {
        _builder.bool = value
      }
    /**
     * ```
     * bool has a boolean value if the type is TYPE_BOOL.
     * ```
     *
     * `bool bool = 2 [json_name = "bool"];`
     */
    public fun clearBool() {
      _builder.clearBool()
    }

    /**
     * ```
     * num has a number value if the type is TYPE_NUM.
     * ```
     *
     * `double num = 3 [json_name = "num"];`
     */
    public var num: kotlin.Double
      @JvmName("getNum")
      get() = _builder.num
      @JvmName("setNum")
      set(value) {
        _builder.num = value
      }
    /**
     * ```
     * num has a number value if the type is TYPE_NUM.
     * ```
     *
     * `double num = 3 [json_name = "num"];`
     */
    public fun clearNum() {
      _builder.clearNum()
    }

    /**
     * ```
     * str has a string value if the type is TYPE_STR.
     * ```
     *
     * `string str = 4 [json_name = "str"];`
     */
    public var str: kotlin.String
      @JvmName("getStr")
      get() = _builder.str
      @JvmName("setStr")
      set(value) {
        _builder.str = value
      }
    /**
     * ```
     * str has a string value if the type is TYPE_STR.
     * ```
     *
     * `string str = 4 [json_name = "str"];`
     */
    public fun clearStr() {
      _builder.clearStr()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ArrProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     */
     public val arr: com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.arrList
      )
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     * @param value The arr to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addArr")
    public fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.add(value: net.jumpaku.exprml.pb.exprml.v1.Value) {
      _builder.addArr(value)
    }
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     * @param value The arr to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignArr")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.plusAssign(value: net.jumpaku.exprml.pb.exprml.v1.Value) {
      add(value)
    }
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     * @param values The arr to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllArr")
    public fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.addAll(values: kotlin.collections.Iterable<net.jumpaku.exprml.pb.exprml.v1.Value>) {
      _builder.addAllArr(values)
    }
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     * @param values The arr to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllArr")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.plusAssign(values: kotlin.collections.Iterable<net.jumpaku.exprml.pb.exprml.v1.Value>) {
      addAll(values)
    }
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     * @param index The index to set the value at.
     * @param value The arr to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setArr")
    public operator fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.set(index: kotlin.Int, value: net.jumpaku.exprml.pb.exprml.v1.Value) {
      _builder.setArr(index, value)
    }
    /**
     * ```
     * arr has an array value if the type is TYPE_ARR.
     * ```
     *
     * `repeated .exprml.v1.Value arr = 5 [json_name = "arr"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearArr")
    public fun com.google.protobuf.kotlin.DslList<net.jumpaku.exprml.pb.exprml.v1.Value, ArrProxy>.clear() {
      _builder.clearArr()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ObjProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
     public val obj: com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getObjMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.objMap
      )
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
    @JvmName("putObj")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      .put(key: kotlin.String, value: net.jumpaku.exprml.pb.exprml.v1.Value) {
         _builder.putObj(key, value)
       }
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setObj")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      .set(key: kotlin.String, value: net.jumpaku.exprml.pb.exprml.v1.Value) {
         put(key, value)
       }
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeObj")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      .remove(key: kotlin.String) {
         _builder.removeObj(key)
       }
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllObj")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value>) {
         _builder.putAllObj(map)
       }
    /**
     * ```
     * obj has an object value if the type is TYPE_OBJ.
     * ```
     *
     * `map<string, .exprml.v1.Value> obj = 6 [json_name = "obj"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearObj")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, net.jumpaku.exprml.pb.exprml.v1.Value, ObjProxy>
      .clear() {
         _builder.clearObj()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun net.jumpaku.exprml.pb.exprml.v1.Value.copy(block: `net.jumpaku.exprml.pb.exprml.v1`.ValueKt.Dsl.() -> kotlin.Unit): net.jumpaku.exprml.pb.exprml.v1.Value =
  `net.jumpaku.exprml.pb.exprml.v1`.ValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

